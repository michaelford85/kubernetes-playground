---
- name: Set Worker Machine Type to large
  ansible.builtin.set_fact:
    machine_type: e2-standard-2
    # ec2_root_volume_name: /dev/sda1
  when: instance_size == "large"

- name: Set Worker Machine Type to xlarge
  ansible.builtin.set_fact:
    machine_type: e2-standard-4
    # ec2_root_volume_name: /dev/sda1
  when: instance_size == "xlarge"

- name: Copy GCP Terraform Directory
  ansible.builtin.copy:
    # src: "{{ playbook_dir }}/terraform/cloud-deploy/gcp_deploy"
    src: gcp_deploy
    dest: /tmp
    mode: 0777

# - shell:
#     cmd: ansible-vault decrypt main.tf --vault-id ~/.ssh/.vault
#     chdir: /tmp/aws_deploy

- name: Initialize Terraform
  ansible.builtin.command:
    cmd: terraform init
    chdir: /tmp/gcp_deploy

- name: Provision on GCP via Terraform
  community.general.terraform:
    project_path: /tmp/gcp_deploy
    state: present
    variables:
      gcp_key: "{{ playbook_dir }}/credentials/gcp-creds.json"
      gcp_project: "eloquent-theme-264620"
      gcp_region: "{{ gcp_region }}"
      gcp_zone: "{{ gcp_zone }}"
      gcp_prefix: "{{ cloud_prefix }}"
      num_instances: "{{ num_instances }}"
      gcp_disk_image: "{{ gcp_disk_image }}"
      machine_type: "{{ machine_type }}"
      cloud_master_volume_size: "{{ cloud_master_volume_size }}"
      cloud_worker_volume_size: "{{ cloud_worker_volume_size}}"
  register: terraform_output
  no_log: true

# - name: Debug Terraform output
#   ansible.builtin.debug:
#     var: terraform_output
#   tags:
#     - debug
